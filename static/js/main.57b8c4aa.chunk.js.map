{"version":3,"sources":["components/menu/index.js","reportWebVitals.js","init/index.js","components/menu/write.js","components/menu/read.js","components/read/index.js","components/read/ullti.js","components/write/index.js","components/write/ullti.js","main/index.js","app.js","index.js"],"names":["reader","closed","keepReading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","handleGetPort","bind","getPorts","a","navigator","serial","requestPort","this","handleState","message","error","toString","ports","length","addEventListener","e","success","className","onClick","Component","Write","onChange","handleWriteType","target","value","title","style","width","size","Group","writeType","handleReadType","readType","type","handleScroll","danger","Boolean","isScroll","block","handleClear","Option","Select","baudRate","Menu","state","portIndex","undefined","dataBits","stopBits","parity","flowControl","option","handleChange","setSerial","openPort","readUntilClosed","map","port","index","getInfo","usbProductId","usbVendorId","usbVendor","USBDevice","filter","item","parseInt","vendor","usbProduct","devices","devid","devname","val","setState","handleChildrenChange","isOpen","readable","getReader","read","done","readText","releaseLock","close","cancel","handlePortOpen","open","placeholder","allowClear","disabled","options","defaultValue","handleRequestPort","Read","scrollToBottom","bodyEnd","scrollIntoView","behavior","items","body","strArr","Array","from","hex","push","toLocaleUpperCase","includes","indexOf","splice","hexx","String","fromCharCode","textColor","renderLi","float","clear","ref","el","TextArea","Input","arr","i","charCodeAt","test","substring","writeText","SendOutlined","readValue","Promise","resolve","reject","writer","writable","getWriter","write","Uint8Array","console","log","newValue","concat","portWrite","res","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57b8c4aa.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Select, Button, AutoComplete } from \"antd\";\r\nimport USBDevice from \"../../assets/usb.json\";\r\nimport { message } from \"antd\";\r\nimport Write from \"./write.js\";\r\nimport Read from \"./read.js\";\r\nconst { Option } = Select;\r\nlet reader;\r\nlet closed;\r\nlet keepReading;\r\nconst baudRate = [\r\n  { value: \"110\" },\r\n  { value: \"300\" },\r\n  { value: \"600\" },\r\n  { value: \"1200\" },\r\n  { value: \"2400\" },\r\n  { value: \"4800\" },\r\n  { value: \"7200\" },\r\n  { value: \"9600\" },\r\n  { value: \"14400\" },\r\n  { value: \"19200\" },\r\n  { value: \"28800\" },\r\n  { value: \"38400\" },\r\n  { value: \"56000\" },\r\n  { value: \"57600\" },\r\n  { value: \"76800\" },\r\n  { value: \"115200\" },\r\n  { value: \"230400\" },\r\n  { value: \"460800\" },\r\n];\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      portIndex: undefined,\r\n      baudRate: \"115200\",\r\n      dataBits: \"8\",\r\n      stopBits: \"1\",\r\n      parity: \"none\",\r\n      flowControl: \"none\",\r\n    };\r\n    this.option = this.option.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setSerial = this.setSerial.bind(this);\r\n    this.openPort = this.openPort.bind(this);\r\n    this.readUntilClosed = this.readUntilClosed.bind(this);\r\n    this.handleWriteType = this.handleWriteType.bind(this);\r\n    this.handleReadType = this.handleReadType.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n  option() {\r\n    // 串口列表\r\n    return this.props.ports.map((port, index) => {\r\n      const { usbProductId, usbVendorId } = port.getInfo();\r\n      if (usbProductId === undefined || usbVendorId === undefined) {\r\n        return (\r\n          <Option value={index} key={index}>\r\n            未知设备({index})\r\n          </Option>\r\n        );\r\n      }\r\n      const usbVendor = USBDevice.filter(\r\n        (item) => parseInt(item.vendor, 16) === usbVendorId\r\n      );\r\n      let usbProduct = [];\r\n      if (usbVendor.length === 1) {\r\n        usbProduct = usbVendor[0].devices.filter(\r\n          (item) => {\r\n            return parseInt(item.devid, 16) === usbProductId\r\n          }\r\n        );\r\n      }\r\n      if(usbProduct.length === 0) {\r\n        return (\r\n          <Option value={index} key={index}>\r\n            未知设备({index})\r\n          </Option>\r\n        );\r\n      }\r\n      return (\r\n        <Option value={index} key={index}>\r\n          {usbProduct[0].devname}\r\n        </Option>\r\n      );\r\n    });\r\n  }\r\n  handleChange(type, val) {\r\n    this.setState({ [type]: val });\r\n  }\r\n  handleWriteType(writeType) {\r\n    this.props.handleChildrenChange(\"writeType\", writeType);\r\n  }\r\n  handleReadType(readType) {\r\n    this.props.handleChildrenChange(\"readType\", readType);\r\n  }\r\n  handleScroll() {\r\n    this.props.handleChildrenChange(\"isScroll\", !this.props.isScroll);\r\n  }\r\n  setSerial() {\r\n    // 设置串口\r\n    if (this.state.portIndex === undefined) {\r\n      message.error(\"请选择串口\");\r\n      return;\r\n    }\r\n    this.openPort(this.state.portIndex, !this.props.isOpen);\r\n  }\r\n  async readUntilClosed(portIndex) {\r\n    let port = this.props.ports[portIndex];\r\n    while (port.readable && keepReading) {\r\n      reader = port.readable.getReader();\r\n      try {\r\n        while (true) {\r\n          const { value, done } = await reader.read();\r\n          this.props.readText(value);\r\n          if (done) {\r\n            break;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        message.error(error.toString());\r\n      } finally {\r\n        reader.releaseLock();\r\n      }\r\n    }\r\n    await port.close();\r\n  }\r\n  async openPort(portIndex, isOpen) {\r\n    // 打开串口\r\n    let port = this.props.ports[portIndex];\r\n    if (!isOpen) {\r\n      // 关闭串口\r\n      keepReading = false;\r\n      reader.cancel();\r\n      await closed;\r\n      this.props.handlePortOpen({\r\n        portIndex,\r\n        isOpen,\r\n      });\r\n    } else {\r\n      await port.open({\r\n        baudRate: this.state.baudRate,\r\n        dataBits: this.state.dataBits,\r\n        stopBits: this.state.stopBits,\r\n        parity: this.state.parity,\r\n        flowControl: this.state.flowControl,\r\n      });\r\n      this.props.handlePortOpen({\r\n        portIndex,\r\n        isOpen,\r\n      });\r\n      keepReading = true;\r\n      closed = this.readUntilClosed(portIndex);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"flex\">\r\n            <div className=\"flex justify-center items-center\">串口：</div>\r\n            <Select\r\n              onChange={this.handleChange.bind(this, \"portIndex\")}\r\n              className=\"flex-1 h-8 cursor-pointer\"\r\n              placeholder=\"请选择串口\"\r\n              allowClear\r\n              disabled={this.props.isOpen}\r\n            >\r\n              {this.option()}\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">波特率：</div>\r\n            <AutoComplete\r\n              onChange={this.handleChange.bind(this, \"baudRate\")}\r\n              className=\"flex-1 h-8\"\r\n              options={baudRate}\r\n              placeholder=\"请输入波特率\"\r\n              defaultValue=\"115200\"\r\n              allowClear\r\n              disabled={this.props.isOpen}\r\n            />\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">数据位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"8\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"dataBits\")}\r\n            >\r\n              <Option value=\"7\">7</Option>\r\n              <Option value=\"8\">8</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">停止位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"1\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"stopBits\")}\r\n            >\r\n              <Option value=\"1\">1</Option>\r\n              <Option value=\"2\">2</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">校验位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"None\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"parity\")}\r\n            >\r\n              <Option value=\"none\">None</Option>\r\n              <Option value=\"even\">Even</Option>\r\n              <Option value=\"odd\">Odd</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">流控制：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"None\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"flowControl\")}\r\n            >\r\n              <Option value=\"none\">None</Option>\r\n              <Option value=\"hardware\">HardWare</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2 justify-between\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"flex-grow mr-3\"\r\n              onClick={this.setSerial}\r\n              danger={this.props.isOpen}\r\n            >\r\n              {this.props.isOpen ? \"关闭串口\" : \"打开串口\"}\r\n            </Button>\r\n            <Button type=\"dashed\" onClick={this.props.handleRequestPort}>\r\n              新增授权\r\n            </Button>\r\n          </div>\r\n          <Read\r\n            readType={this.props.readType}\r\n            handleReadType={this.handleReadType}\r\n            isScroll={this.props.isScroll}\r\n            handleScroll={this.handleScroll}\r\n            handleClear={this.props.handleClear}\r\n          />\r\n          <Write\r\n            writeType={this.props.writeType}\r\n            handleWriteType={this.handleWriteType}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * LCP（最大内容渲染时间）：从用户请求网址到在视口中渲染最大可见内容元素所需的时间。\r\n * 最大的元素通常是图片或视频，也可能是大型块级文本元素。此指标很重要，因为它可以告诉浏览者网址会真正加载。\r\n * * 报告中显示的汇总 LCP 是指网址群组中某个网址在其 75% 的访问事件中达到 LCP 状态所用的时间。\r\n * FID（首次输入延迟）：从用户首次与您的网页互动（点击链接、点按按钮，等等）到浏览器响应此次互动之间的用时。\r\n * 这种衡量方案的对象是被用户首次点击的任何互动式元素。此指标在用户需要执行操作的网页上非常重要，因为可据此判断网页进入互动状态的时间。\r\n * * 报告中显示的汇总 FID 是指网址群组中某个网址在其 75% 的访问事件中获得此值或更高值。\r\n * CLS (Cumulative Layout Shift)：CLS 会衡量在网页的整个生命周期内发生的所有意外布局偏移的得分总和。\r\n * 得分是零到任意正数，其中 0 表示无偏移，且数字越大，网页的布局偏移越大。\r\n * 此指标很重要，因为当用户尝试与网页元素互动时，如果网页元素出现偏移，这会导致糟糕的用户体验。\r\n * 如果您似乎找不出得分很高的原因，请尝试与该网页互动，看看这对得分有何影响。\r\n * * 报告中显示的汇总 CLS 是指网址群组中某个网址的 75% 访问事件的最低相同 CLS。\r\n * FCP（全称“First Contentful Paint”，翻译为“首次内容绘制”），它代表浏览器第一次向屏幕绘制 “内容”的时间。\r\n * TTFB（全称“Time to First Byte”） 表示浏览器接收第一个字节的时间\r\n * @param {Function} onPerfEntry\r\n */\r\nconst reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Component } from \"react\";\r\nimport { message } from \"antd\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleGetPort = this.handleGetPort.bind(this);\r\n    this.getPorts = this.getPorts.bind(this);\r\n  }\r\n  async handleGetPort() {\r\n    // 客户端授权\r\n    try {\r\n      await navigator.serial.requestPort();\r\n      this.props.handleState(true);\r\n    } catch (e) {\r\n      message.error(e.toString());\r\n    }\r\n  }\r\n  async getPorts() {\r\n    navigator.serial.getPorts().then(async (ports) => {\r\n      if (ports.length > 0) {\r\n        this.props.handleState(true);\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    // 判断是否进行过授权\r\n    navigator.serial.addEventListener(\"connect\", (e) => {\r\n      message.success(\"设备已连接\");\r\n      this.getPorts();\r\n    });\r\n    navigator.serial.addEventListener(\"disconnect\", (e) => {\r\n      message.error(\"设备已断开\");\r\n    });\r\n    this.getPorts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"w-screen h-screen flex flex-col justify-center items-center bg-gray-200\">\r\n        <span className=\"mb-5 text-3xl\">\r\n          仅支持Chrome 89+或者Edge 89+浏览器\r\n        </span>\r\n        <button\r\n          className=\"w-auto h-12 px-5 rounded-2xl bg-red-400 hover:bg-red-500 text-xl text-black text-opacity-80\"\r\n          onClick={this.handleGetPort}\r\n        >\r\n          点击授权\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Card, Radio } from \"antd\";\r\nexport default class Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.props.handleWriteType(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"发送区设置\"\r\n        style={{ width: \"100%\" }}\r\n        size=\"small\"\r\n        className=\"mt-2\"\r\n      >\r\n        <Radio.Group onChange={this.onChange} value={this.props.writeType}>\r\n          <Radio value={1}>ASCII</Radio>\r\n          <Radio value={2}>HEX</Radio>\r\n        </Radio.Group>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Card, Radio, Button } from \"antd\";\r\nexport default class Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.props.handleReadType(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"接收区设置\"\r\n        style={{ width: \"100%\" }}\r\n        size=\"small\"\r\n        className=\"mt-2\"\r\n      >\r\n        <Radio.Group onChange={this.onChange} value={this.props.readType}>\r\n          <Radio value={1}>ASCII</Radio>\r\n          <Radio value={2}>HEX</Radio>\r\n        </Radio.Group>\r\n        <Button\r\n          type=\"dashed\"\r\n          className=\"mt-2\"\r\n          onClick={this.props.handleScroll}\r\n          danger={!Boolean(this.props.isScroll)}\r\n          block\r\n        >\r\n          {this.props.isScroll ? \"暂停滚动\" : \"继续滚动\"}\r\n        </Button>\r\n        <Button\r\n          type=\"dashed\"\r\n          className=\"mt-2\"\r\n          onClick={this.props.handleClear}\r\n          block\r\n        >\r\n          清空窗口\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { hex2a } from \"./ullti.js\";\r\nimport \"./index.css\";\r\nexport default class Read extends Component {\r\n  renderLi() {\r\n    const readType = this.props.readType;\r\n    return this.props.value.map((items, index) => {\r\n      const item = items.value;\r\n      const type = items.type; // 1接收，2发送\r\n      let body = [];\r\n      if (item !== undefined) {\r\n        let strArr = [];\r\n        for (let hex of Array.from(item)) {\r\n          strArr.push(hex.toString(16).toLocaleUpperCase());\r\n        }\r\n        if (strArr.includes(\"D\") && strArr.includes(\"A\")) {\r\n          if (strArr.indexOf(\"A\") - strArr.indexOf(\"D\") === 1) {\r\n            strArr.splice(strArr.indexOf(\"D\"), 1);\r\n            strArr.splice(strArr.indexOf(\"A\"), 1, <br key={0} />);\r\n          }\r\n        }\r\n        strArr = strArr.map((item) => {\r\n          if (typeof item === \"string\") {\r\n            if (readType === 1) {\r\n              return hex2a(parseInt(item, 16));\r\n            } else if (readType === 2) {\r\n              return item + \" \";\r\n            }\r\n          }\r\n          return item;\r\n        });\r\n        if (typeof strArr[strArr.length - 1] === \"string\") {\r\n          strArr.push(<br key={1} />);\r\n        }\r\n        body.push(strArr);\r\n      }\r\n      return (\r\n        <span className={this.textColor(type)} key={index}>\r\n          {body}\r\n        </span>\r\n      );\r\n    });\r\n  }\r\n  textColor(type) {\r\n    let className = \"py-3 \";\r\n    if (type === 1) {\r\n      className += \"text-green-700\";\r\n    } else if (type === 2) {\r\n      className += \"text-blue-700\";\r\n    }\r\n    return className;\r\n  }\r\n  scrollToBottom = () => {\r\n    this.bodyEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.props.isScroll) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"break-all text-xl\">{this.renderLi()}</div>\r\n        <div\r\n          style={{ float: \"left\", clear: \"both\" }}\r\n          ref={(el) => {\r\n            this.bodyEnd = el;\r\n          }}\r\n        ></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export function hex2a(hexx) {\r\n  return String.fromCharCode(hexx);\r\n}\r\n","import { Component } from \"react\";\r\nimport { Input, Button, message } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { a2hex } from \"./ullti.js\";\r\nconst { TextArea } = Input;\r\nexport default class Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n  onClick() {\r\n    const writeType = this.props.writeType;\r\n    let value = this.state.value;\r\n    let arr = [];\r\n    if (value === null) {\r\n      return;\r\n    }\r\n    if (writeType === 1) {\r\n      // ASCII\r\n      for (let i = 0; i < value.length; i++) {\r\n        arr.push(a2hex(value[i]));\r\n      }\r\n    } else if (writeType === 2) {\r\n      // HEX\r\n      if (/^[0-9A-Fa-f]+$/.test(value) && value.length % 2 === 0) {\r\n        for (let i = 0; i < value.length; i = i + 2) {\r\n          arr.push(parseInt(value.substring(i, i + 2), 16));\r\n        }\r\n      } else {\r\n        message.error(\"格式错误\");\r\n        return;\r\n      }\r\n    }\r\n    this.props.writeText(arr);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-full relative\">\r\n        <TextArea onChange={this.onChange} className=\"h-full resize-none\" />\r\n        <Button\r\n          className=\"absolute right-2 bottom-2\"\r\n          onClick={this.onClick}\r\n          type=\"primary\"\r\n        >\r\n          <span className=\"flex justify-centeru items-center\">\r\n            <SendOutlined />\r\n            发送\r\n          </span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function a2hex(str) {\r\n  return str.charCodeAt(0);\r\n}\r\n","import { Component } from \"react\";\r\nimport Menu from \"../components/menu/index.js\";\r\nimport Read from \"../components/read/index.js\";\r\nimport Write from \"../components/write/index.js\";\r\nimport { message } from \"antd\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      portIndex: undefined,\r\n      ports: [],\r\n      isOpen: false,\r\n      writeType: 1,\r\n      readType: 1,\r\n      isScroll: true,\r\n      readValue: [],\r\n    };\r\n    this.handlePortOpen = this.handlePortOpen.bind(this);\r\n    this.getPorts = this.getPorts.bind(this);\r\n    this.handleRequestPort = this.handleRequestPort.bind(this);\r\n    this.handleChildrenChange = this.handleChildrenChange.bind(this);\r\n    this.readText = this.readText.bind(this);\r\n    this.writeText = this.writeText.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n  }\r\n  async getPorts() {\r\n    // 获取已授权的全部串口\r\n    let ports = await navigator.serial.getPorts();\r\n    this.setState({\r\n      ports,\r\n    });\r\n  }\r\n  async handleRequestPort() {\r\n    // 请求授权\r\n    try {\r\n      await navigator.serial.requestPort();\r\n      this.getPorts();\r\n    } catch (e) {\r\n      message.error(e.toString());\r\n    }\r\n  }\r\n  handlePortOpen({ portIndex, isOpen }) {\r\n    // 处理打开串口\r\n    this.setState({\r\n      portIndex,\r\n      isOpen,\r\n    });\r\n  }\r\n  handleChildrenChange(type, value) {\r\n    this.setState({\r\n      [type]: value,\r\n    });\r\n  }\r\n  portWrite(value) {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (!this.state.isOpen) {\r\n        message.error(\"串口未打开\");\r\n        reject();\r\n        return;\r\n      } else {\r\n        let port = this.state.ports[this.state.portIndex];\r\n        const writer = port.writable.getWriter();\r\n        await writer.write(new Uint8Array(value));\r\n        writer.releaseLock();\r\n        resolve(value);\r\n      }\r\n    });\r\n  }\r\n  readText(value) {\r\n    console.log(value, \"读取\");\r\n    let newValue = this.state.readValue.concat({\r\n      value,\r\n      type: 1,\r\n    });\r\n    this.setState({\r\n      readValue: newValue,\r\n    });\r\n  }\r\n  writeText(value) {\r\n    console.log(value, \"写入\");\r\n    this.portWrite(value).then((res) => {\r\n      let newValue = this.state.readValue.concat({\r\n        value: res,\r\n        type: 2,\r\n      });\r\n      this.setState({\r\n        readValue: newValue,\r\n      });\r\n    });\r\n  }\r\n  handleClear() {\r\n    this.setState({\r\n      readValue: [],\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getPorts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"w-9/12 h-screen bg-gray-100 flex mx-auto shadow-2xl\">\r\n        <div className=\"w-1/4 h-screen border-r-2 border-black border-opacity-20 p-3\">\r\n          <Menu\r\n            ports={this.state.ports}\r\n            isOpen={this.state.isOpen}\r\n            writeType={this.state.writeType}\r\n            readType={this.state.readType}\r\n            isScroll={this.state.isScroll}\r\n            handlePortOpen={this.handlePortOpen}\r\n            handleRequestPort={this.handleRequestPort}\r\n            readText={this.readText}\r\n            handleChildrenChange={this.handleChildrenChange}\r\n            handleClear={this.handleClear}\r\n          />\r\n        </div>\r\n        <div className=\"w-3/4 h-screen\">\r\n          <div className=\"w-auto h-4/5 border-b-2 border-black border-opacity-20 p-3 overflow-x-hidden overflow-y-auto\">\r\n            <Read\r\n              value={this.state.readValue}\r\n              readType={this.state.readType}\r\n              isScroll={this.state.isScroll}\r\n            />\r\n          </div>\r\n          <div className=\"w-auto h-1/5 p-3\">\r\n            <Write\r\n              writeText={this.writeText}\r\n              writeType={this.state.writeType}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport Init from \"./init\";\r\nimport Main from \"./main\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: false,\r\n    };\r\n    this.handleState = this.handleState.bind(this);\r\n  }\r\n  handleState(status) {\r\n    this.setState({\r\n      status,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.status) {\r\n      return <Main />;\r\n    } else {\r\n      return <Init handleState={this.handleState} />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport App from \"./app.js\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}