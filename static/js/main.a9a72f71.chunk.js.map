{"version":3,"sources":["components/menu/index.js","reportWebVitals.js","init/index.js","components/menu/write.js","components/menu/read.js","components/read/index.js","main/index.js","app.js","index.js"],"names":["reader","closed","keepReading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","handleGetPort","bind","getPorts","a","navigator","serial","requestPort","this","handleState","message","error","toString","ports","length","addEventListener","e","success","className","onClick","Component","Write","onChange","handleWriteType","target","value","title","style","width","size","Group","writeType","handleReadType","readType","type","handleScroll","danger","Boolean","isScroll","block","Option","Select","baudRate","Menu","state","portIndex","undefined","dataBits","stopBits","parity","flowControl","option","handleChange","setSerial","openPort","readUntilClosed","map","port","index","getInfo","usbProductId","usbVendorId","usbVendor","USBDevice","filter","item","parseInt","vendor","usbProduct","devices","devid","devname","val","setState","handleChildrenChange","isOpen","readable","getReader","read","done","readText","releaseLock","close","cancel","handlePortOpen","open","placeholder","allowClear","disabled","options","defaultValue","handleRequestPort","Read","text","forEach","toLocaleUpperCase","renderLi","readValue","newValue","Array","from","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9a72f71.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Select, Button, AutoComplete } from \"antd\";\r\nimport USBDevice from \"../../assets/usb.json\";\r\nimport { message } from \"antd\";\r\nimport Write from \"./write.js\";\r\nimport Read from \"./read.js\";\r\nconst { Option } = Select;\r\nlet reader;\r\nlet closed;\r\nlet keepReading;\r\nconst baudRate = [\r\n  { value: \"110\" },\r\n  { value: \"300\" },\r\n  { value: \"600\" },\r\n  { value: \"1200\" },\r\n  { value: \"2400\" },\r\n  { value: \"4800\" },\r\n  { value: \"7200\" },\r\n  { value: \"9600\" },\r\n  { value: \"14400\" },\r\n  { value: \"19200\" },\r\n  { value: \"28800\" },\r\n  { value: \"38400\" },\r\n  { value: \"56000\" },\r\n  { value: \"57600\" },\r\n  { value: \"76800\" },\r\n  { value: \"115200\" },\r\n  { value: \"230400\" },\r\n  { value: \"460800\" },\r\n];\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      portIndex: undefined,\r\n      baudRate: \"115200\",\r\n      dataBits: \"8\",\r\n      stopBits: \"1\",\r\n      parity: \"none\",\r\n      flowControl: \"none\",\r\n    };\r\n    this.option = this.option.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setSerial = this.setSerial.bind(this);\r\n    this.openPort = this.openPort.bind(this);\r\n    this.readUntilClosed = this.readUntilClosed.bind(this);\r\n    this.handleWriteType = this.handleWriteType.bind(this);\r\n    this.handleReadType = this.handleReadType.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n  option() {\r\n    // 串口列表\r\n    return this.props.ports.map((port, index) => {\r\n      const { usbProductId, usbVendorId } = port.getInfo();\r\n      if (usbProductId === undefined || usbVendorId === undefined) {\r\n        return (\r\n          <Option value={index} key={index}>\r\n            未知设备({index})\r\n          </Option>\r\n        );\r\n      }\r\n      const usbVendor = USBDevice.filter(\r\n        (item) => parseInt(item.vendor, 16) === usbVendorId\r\n      );\r\n      let usbProduct = [];\r\n      if (usbVendor.length === 1) {\r\n        usbProduct = usbVendor[0].devices.filter(\r\n          (item) => parseInt(item.devid, 16) === usbProductId\r\n        );\r\n      }\r\n      return (\r\n        <Option value={index} key={index}>\r\n          {usbProduct[0].devname}\r\n        </Option>\r\n      );\r\n    });\r\n  }\r\n  handleChange(type, val) {\r\n    this.setState({ [type]: val });\r\n  }\r\n  handleWriteType(writeType) {\r\n    this.props.handleChildrenChange(\"writeType\", writeType);\r\n  }\r\n  handleReadType(readType) {\r\n    this.props.handleChildrenChange(\"readType\", readType);\r\n  }\r\n  handleScroll() {\r\n    this.props.handleChildrenChange(\"isScroll\", !this.props.isScroll);\r\n  }\r\n  setSerial() {\r\n    // 设置串口\r\n    if (this.state.portIndex === undefined) {\r\n      message.error(\"请选择串口\");\r\n      return;\r\n    }\r\n    this.openPort(this.state.portIndex, !this.props.isOpen);\r\n  }\r\n  async readUntilClosed(portIndex) {\r\n    let port = this.props.ports[portIndex];\r\n    while (port.readable && keepReading) {\r\n      reader = port.readable.getReader();\r\n      try {\r\n        while (true) {\r\n          const { value, done } = await reader.read();\r\n          this.props.readText(value);\r\n          if (done) {\r\n            break;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        message.error(error.toString());\r\n      } finally {\r\n        reader.releaseLock();\r\n      }\r\n    }\r\n    await port.close();\r\n  }\r\n  async openPort(portIndex, isOpen) {\r\n    // 打开串口\r\n    let port = this.props.ports[portIndex];\r\n    if (!isOpen) {\r\n      // 关闭串口\r\n      keepReading = false;\r\n      reader.cancel();\r\n      await closed;\r\n      this.props.handlePortOpen({\r\n        portIndex,\r\n        isOpen,\r\n      });\r\n    } else {\r\n      await port.open({\r\n        baudRate: this.state.baudRate,\r\n        dataBits: this.state.dataBits,\r\n        stopBits: this.state.stopBits,\r\n        parity: this.state.parity,\r\n        flowControl: this.state.flowControl,\r\n      });\r\n      this.props.handlePortOpen({\r\n        portIndex,\r\n        isOpen,\r\n      });\r\n      keepReading = true;\r\n      closed = this.readUntilClosed(portIndex);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"flex\">\r\n            <div className=\"flex justify-center items-center\">串口：</div>\r\n            <Select\r\n              onChange={this.handleChange.bind(this, \"portIndex\")}\r\n              className=\"flex-1 h-8 cursor-pointer\"\r\n              placeholder=\"请选择串口\"\r\n              allowClear\r\n              disabled={this.props.isOpen}\r\n            >\r\n              {this.option()}\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">波特率：</div>\r\n            <AutoComplete\r\n              onChange={this.handleChange.bind(this, \"baudRate\")}\r\n              className=\"flex-1 h-8\"\r\n              options={baudRate}\r\n              placeholder=\"请输入波特率\"\r\n              defaultValue=\"115200\"\r\n              allowClear\r\n              disabled={this.props.isOpen}\r\n            />\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">数据位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"8\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"dataBits\")}\r\n            >\r\n              <Option value=\"7\">7</Option>\r\n              <Option value=\"8\">8</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">停止位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"1\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"stopBits\")}\r\n            >\r\n              <Option value=\"1\">1</Option>\r\n              <Option value=\"2\">2</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">校验位：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"None\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"parity\")}\r\n            >\r\n              <Option value=\"none\">None</Option>\r\n              <Option value=\"even\">Even</Option>\r\n              <Option value=\"odd\">Odd</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"flex justify-center items-center\">流控制：</div>\r\n            <Select\r\n              className=\"flex-1 h-8\"\r\n              defaultValue=\"None\"\r\n              disabled={this.props.isOpen}\r\n              onChange={this.handleChange.bind(this, \"flowControl\")}\r\n            >\r\n              <Option value=\"none\">None</Option>\r\n              <Option value=\"hardware\">HardWare</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex mt-2 justify-between\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"flex-grow mr-3\"\r\n              onClick={this.setSerial}\r\n              danger={this.props.isOpen}\r\n            >\r\n              {this.props.isOpen ? \"关闭串口\" : \"打开串口\"}\r\n            </Button>\r\n            <Button type=\"dashed\" onClick={this.props.handleRequestPort}>\r\n              新增授权\r\n            </Button>\r\n          </div>\r\n          <Read\r\n            readType={this.props.readType}\r\n            handleReadType={this.handleReadType}\r\n            isScroll={this.props.isScroll}\r\n            handleScroll={this.handleScroll}\r\n          />\r\n          <Write\r\n            writeType={this.props.writeType}\r\n            handleWriteType={this.handleWriteType}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/**\n * LCP（最大内容渲染时间）：从用户请求网址到在视口中渲染最大可见内容元素所需的时间。\n * 最大的元素通常是图片或视频，也可能是大型块级文本元素。此指标很重要，因为它可以告诉浏览者网址会真正加载。\n * * 报告中显示的汇总 LCP 是指网址群组中某个网址在其 75% 的访问事件中达到 LCP 状态所用的时间。\n * FID（首次输入延迟）：从用户首次与您的网页互动（点击链接、点按按钮，等等）到浏览器响应此次互动之间的用时。\n * 这种衡量方案的对象是被用户首次点击的任何互动式元素。此指标在用户需要执行操作的网页上非常重要，因为可据此判断网页进入互动状态的时间。\n * * 报告中显示的汇总 FID 是指网址群组中某个网址在其 75% 的访问事件中获得此值或更高值。\n * CLS (Cumulative Layout Shift)：CLS 会衡量在网页的整个生命周期内发生的所有意外布局偏移的得分总和。\n * 得分是零到任意正数，其中 0 表示无偏移，且数字越大，网页的布局偏移越大。\n * 此指标很重要，因为当用户尝试与网页元素互动时，如果网页元素出现偏移，这会导致糟糕的用户体验。\n * 如果您似乎找不出得分很高的原因，请尝试与该网页互动，看看这对得分有何影响。\n * * 报告中显示的汇总 CLS 是指网址群组中某个网址的 75% 访问事件的最低相同 CLS。\n * FCP（全称“First Contentful Paint”，翻译为“首次内容绘制”），它代表浏览器第一次向屏幕绘制 “内容”的时间。\n * TTFB（全称“Time to First Byte”） 表示浏览器接收第一个字节的时间\n * @param {Function} onPerfEntry\n */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Component } from \"react\";\r\nimport { message } from \"antd\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleGetPort = this.handleGetPort.bind(this);\r\n    this.getPorts = this.getPorts.bind(this);\r\n  }\r\n  async handleGetPort() {\r\n    // 客户端授权\r\n    try {\r\n      await navigator.serial.requestPort();\r\n      this.props.handleState(true);\r\n    } catch (e) {\r\n      message.error(e.toString());\r\n    }\r\n  }\r\n  async getPorts() {\r\n    navigator.serial.getPorts().then(async (ports) => {\r\n      if (ports.length > 0) {\r\n        this.props.handleState(true);\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    // 判断是否进行过授权\r\n    navigator.serial.addEventListener(\"connect\", (e) => {\r\n      message.success(\"设备已连接\");\r\n      this.getPorts();\r\n    });\r\n    navigator.serial.addEventListener(\"disconnect\", (e) => {\r\n      message.error(\"设备已断开\");\r\n    });\r\n    this.getPorts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"w-screen h-screen flex flex-col justify-center items-center bg-gray-200\">\r\n        <span className=\"mb-5 text-3xl\">\r\n          仅支持Chrome 89+或者Edge 89+浏览器\r\n        </span>\r\n        <button\r\n          className=\"w-auto h-12 px-5 rounded-2xl bg-red-400 hover:bg-red-500 text-xl text-black text-opacity-80\"\r\n          onClick={this.handleGetPort}\r\n        >\r\n          点击授权\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Card, Radio } from \"antd\";\r\nexport default class Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.props.handleWriteType(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"发送区设置\"\r\n        style={{ width: \"100%\" }}\r\n        size=\"small\"\r\n        className=\"mt-2\"\r\n      >\r\n        <Radio.Group onChange={this.onChange} value={this.props.writeType}>\r\n          <Radio value={1}>ASCII</Radio>\r\n          <Radio value={2}>HEX</Radio>\r\n        </Radio.Group>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Card, Radio, Button } from \"antd\";\r\nexport default class Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.props.handleReadType(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"接收区设置\"\r\n        style={{ width: \"100%\" }}\r\n        size=\"small\"\r\n        className=\"mt-2\"\r\n      >\r\n        <Radio.Group onChange={this.onChange} value={this.props.readType}>\r\n          <Radio value={1}>ASCII</Radio>\r\n          <Radio value={2}>HEX</Radio>\r\n        </Radio.Group>\r\n        <Button\r\n          type=\"dashed\"\r\n          className=\"mt-2\"\r\n          onClick={this.props.handleScroll}\r\n          danger={!Boolean(this.props.isScroll)}\r\n          block\r\n        >\r\n          {this.props.isScroll ? \"暂停滚动\" : \"继续滚动\"}\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nexport default class Read extends Component {\r\n  renderLi() {\r\n    const type = this.props.readType;\r\n    let text = \"\";\r\n    this.props.value.forEach((item, index) => {\r\n      if (type === 1) {\r\n        text = item;\r\n      } else if (type === 2) {\r\n        if (item === 10 || item === 13) {\r\n          text = text + \"\\r\\n\";\r\n        } else {\r\n          text = text + item.toString(16).toLocaleUpperCase();\r\n        }\r\n      }\r\n    });\r\n    return text;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>{this.renderLi()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport Menu from \"../components/menu/index.js\";\r\nimport Read from \"../components/read/index.js\";\r\nimport { message } from \"antd\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      portIndex: undefined,\r\n      ports: [],\r\n      isOpen: false,\r\n      writeType: 1,\r\n      readType: 1,\r\n      isScroll: true,\r\n      readValue: [],\r\n    };\r\n    this.handlePortOpen = this.handlePortOpen.bind(this);\r\n    this.getPorts = this.getPorts.bind(this);\r\n    this.handleRequestPort = this.handleRequestPort.bind(this);\r\n    this.handleChildrenChange = this.handleChildrenChange.bind(this);\r\n    this.readText = this.readText.bind(this);\r\n  }\r\n  async getPorts() {\r\n    // 获取已授权的全部串口\r\n    let ports = await navigator.serial.getPorts();\r\n    this.setState({\r\n      ports,\r\n    });\r\n  }\r\n  async handleRequestPort() {\r\n    // 请求授权\r\n    try {\r\n      await navigator.serial.requestPort();\r\n      this.getPorts();\r\n    } catch (e) {\r\n      message.error(e.toString());\r\n    }\r\n  }\r\n  handlePortOpen({ portIndex, isOpen }) {\r\n    // 处理打开串口\r\n    this.setState({\r\n      portIndex,\r\n      isOpen,\r\n    });\r\n  }\r\n  handleChildrenChange(type, value) {\r\n    this.setState({\r\n      [type]: value,\r\n    });\r\n  }\r\n  readText(value) {\r\n    let newValue = [...this.state.readValue, ...Array.from(value)];\r\n    this.setState({\r\n      readValue: newValue,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getPorts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"w-9/12 h-screen bg-gray-100 flex mx-auto shadow-2xl\">\r\n        <div className=\"w-1/4 h-screen border-r-2 border-black border-opacity-20 p-3\">\r\n          <Menu\r\n            ports={this.state.ports}\r\n            isOpen={this.state.isOpen}\r\n            writeType={this.state.writeType}\r\n            readType={this.state.readType}\r\n            isScroll={this.state.isScroll}\r\n            handlePortOpen={this.handlePortOpen}\r\n            handleRequestPort={this.handleRequestPort}\r\n            readText={this.readText}\r\n            handleChildrenChange={this.handleChildrenChange}\r\n          />\r\n        </div>\r\n        <div className=\"w-3/4 h-screen\">\r\n          <div className=\"w-auto h-4/5 border-b-2 border-black border-opacity-20 p-3 overflow-x-hidden overflow-y-auto\">\r\n            <Read value={this.state.readValue} readType={this.state.readType} />\r\n          </div>\r\n          <div className=\"w-auto h-1/5 p-3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport Init from \"./init\";\r\nimport Main from \"./main\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: false,\r\n    };\r\n    this.handleState = this.handleState.bind(this);\r\n  }\r\n  handleState(status) {\r\n    this.setState({\r\n      status,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.status) {\r\n      return <Main />;\r\n    } else {\r\n      return <Init handleState={this.handleState} />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./app.js\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}